###################################################################################
#
# HW1.R
#
###################################################################################
# External Functions
###################################################################################
library(igraph)
###################################################################################
# Internal Functions
###################################################################################
###################################################################################
# Save the environment
###################################################################################
parSave=par(no.readonly = TRUE)
###################################################################################
#
# HW1.R
#
###################################################################################
# External Functions
###################################################################################
library(igraph)
###################################################################################
# Internal Functions
###################################################################################
###################################################################################
# Save the environment
###################################################################################
parSave=par(no.readonly = TRUE)
###################################################################################
# Processing
###################################################################################
#1
g <- graph_from_literal(A-X:Y:Z,A-Z,B:C-X:Y,A-B)
g
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
incident(g,"Y")
length(incident(g,"Y"))
#d
g2=g
V(g2)$name
V(g2)$label=V(g2)$name
V(g2)$label[which(V(g2)$label=="X")]
V(g2)$label[which(V(g2)$label=="X")]='?'
V(g2)$label[which(V(g2)$label=="X")]='?'
V(g2)$label[which(V(g2)$label=="C")]='!'
E(g2)$weight=2        #Initialize weight attribute
get.edge.ids(g2,c('D','A','E','A'))
###################################################################################
#
# HW1.R
#
###################################################################################
# External Functions
###################################################################################
library(igraph)
###################################################################################
# Internal Functions
###################################################################################
###################################################################################
# Save the environment
###################################################################################
parSave=par(no.readonly = TRUE)
###################################################################################
# Processing
###################################################################################
#1
g <- graph_from_literal(A-X:Y:Z,A-Z,B:C-X:Y,A-B)
g
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
#c
length(incident(g,"Y"))
#d
g2=g
V(g2)$label=V(g2)$name
V(g2)$label[which(V(g2)$label=="X")]='?'
V(g2)$label[which(V(g2)$label=="C")]='!'
#e
g2=g2+vertices('D','E')
g2=g2+edges('D','A','E','A')
V(g2)$label[which(V(g2)$name=="D")]='D'
V(g2)$label[which(V(g2)$name=="E")]='E'
#f
E(g2)$weight=2        #Initialize weight attribute
E(g2)$weight[get.edge.ids(g2,c('D','A','E','A'))]=1
get.edge.ids(g2,c('D','A','E','A'))
set.seed(23);plot(g);set.seed(10);plot(g2)
#h
par(mfrow=c(1,2))
set.seed(23);plot(g);set.seed(10);plot(g2)
par(parSave)
#2
iSave=igraph_options(edge.arrow.size=.5,vertex.color="pink",edge.color="black",
vertex.label.color="purple")
g <- graph_from_literal(W1+-W2:W3-+W5,W2+-W6++W7,W8:W9,W10+W3)
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
#c
g2=g
g2=g2+edges('W8','W5','W8','W9','W8','W9')
#d
E(g2)$weight <- 1        #Initialize weight attribute
g2 <- simplify(g2)
E(g2)$label=E(g2)$weight    #Edge label
#e
par(mfrow=c(2,1))
set.seed(23);plot(g);set.seed(23);plot(g2)
par(parSave)
#f
summary(g2)
igraph_options(iSave)
###################################################################################
#
# HW1.R
#
###################################################################################
# External Functions
###################################################################################
library(igraph)
###################################################################################
# Internal Functions
###################################################################################
###################################################################################
# Save the environment
###################################################################################
parSave=par(no.readonly = TRUE)
###################################################################################
# Processing
###################################################################################
#1
g <- graph_from_literal(A-X:Y:Z,A-Z,B:C-X:Y,A-B)
g
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
#c
length(incident(g,"Y"))
#d
g2=g
V(g2)$label=V(g2)$name
V(g2)$label[which(V(g2)$label=="X")]='?'
V(g2)$label[which(V(g2)$label=="C")]='!'
#e
g2=g2+vertices('D','E')
g2=g2+edges('D','A','E','A')
V(g2)$label[which(V(g2)$name=="D")]='D'
V(g2)$label[which(V(g2)$name=="E")]='E'
#f
E(g2)$weight=2        #Initialize weight attribute
E(g2)$weight[get.edge.ids(g2,c('D','A','E','A'))]=1
#g
E(g2)$label=E(g2)$weight
#h
par(mfrow=c(1,2))
set.seed(23);plot(g);set.seed(10);plot(g2)
par(parSave)
#2
iSave=igraph_options(edge.arrow.size=.5,vertex.color="pink",edge.color="black",
vertex.label.color="purple")
g <- graph_from_literal(W1+-W2:W3-+W5,W2+-W6++W7,W8:W9,W10+W3)
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
#c
g2=g
g2=g2+edges('W8','W5','W8','W9','W8','W9')
#d
E(g2)$weight <- 1        #Initialize weight attribute
g2 <- simplify(g2)
E(g2)$label=E(g2)$weight    #Edge label
#e
par(mfrow=c(2,1))
set.seed(23);plot(g);set.seed(23);plot(g2)
par(parSave)
#f
summary(g2)
igraph_options(iSave)
###################################################################################
#
# HW1.R
#
###################################################################################
# External Functions
###################################################################################
library(igraph)
###################################################################################
# Internal Functions
###################################################################################
###################################################################################
# Save the environment
###################################################################################
parSave=par(no.readonly = TRUE)
###################################################################################
# Processing
###################################################################################
#1
g <- graph_from_literal(A-X:Y:Z,A-Z,B:C-X:Y,A-B)
g
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
#c
length(incident(g,"Y"))
#d
g2=g
V(g2)$label=V(g2)$name
V(g2)$label[which(V(g2)$label=="X")]='?'
V(g2)$label[which(V(g2)$label=="C")]='!'
#e
g2=g2+vertices('D','E')
g2=g2+edges('D','A','E','A')
V(g2)$label[which(V(g2)$name=="D")]='D'
V(g2)$label[which(V(g2)$name=="E")]='E'
#f
E(g2)$weight=2        #Initialize weight attribute
E(g2)$weight[get.edge.ids(g2,c('D','A','E','A'))]=1
#g
E(g2)$label=E(g2)$weight
#h
par(mfrow=c(1,2))
set.seed(23);plot(g);set.seed(10);plot(g2)
par(parSave)
#2
iSave=igraph_options(edge.arrow.size=.5,vertex.color="pink",edge.color="black",
vertex.label.color="purple")
g <- graph_from_literal(W1+-W2:W3-+W5,W2+-W6++W7,W8:W9,W10+W3)
set.seed(23);plot(g)
#a
gorder(g)
#b
gsize(g)
#c
g2=g
g2=g2+edges('W8','W5','W8','W9','W8','W9')
#d
E(g2)$weight <- 1        #Initialize weight attribute
g2 <- simplify(g2)
E(g2)$label=E(g2)$weight    #Edge label
#e
par(mfrow=c(2,1))
set.seed(23);plot(g);set.seed(23);plot(g2)
par(parSave)
#f
summary(g2)
igraph_options(iSave)
set.seed(23);plot(g);set.seed(23);plot(g2)
set.seed(23);plot(g);set.seed(23);plot(g2)
set.seed(23);plot(g);set.seed(23);plot(g2)
par(parSave)
#f
summary(g2)
igraph_options(iSave)
set.seed(23);plot(g);set.seed(23);plot(g2)
